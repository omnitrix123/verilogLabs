$date
	Mon Dec 13 10:43:39 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! s [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$var reg 1 $ ci $end
$scope module FA $end
$var wire 32 % a [31:0] $end
$var wire 32 & b [31:0] $end
$var wire 1 $ ci $end
$var wire 32 ' s [31:0] $end
$var wire 1 ( pout $end
$var wire 1 ) gout $end
$scope module c1 $end
$var wire 32 * a [31:0] $end
$var wire 32 + b [31:0] $end
$var wire 1 $ cin $end
$var wire 32 , s [31:0] $end
$var wire 1 ( pout $end
$var wire 2 - p [1:0] $end
$var wire 1 ) gout $end
$var wire 2 . g [1:0] $end
$var wire 1 / cout $end
$scope module c1 $end
$var wire 16 0 a [15:0] $end
$var wire 16 1 b [15:0] $end
$var wire 1 $ cin $end
$var wire 16 2 s [15:0] $end
$var wire 1 3 pout $end
$var wire 2 4 p [1:0] $end
$var wire 1 5 gout $end
$var wire 2 6 g [1:0] $end
$var wire 1 7 cout $end
$scope module c1 $end
$var wire 8 8 a [7:0] $end
$var wire 8 9 b [7:0] $end
$var wire 1 $ cin $end
$var wire 8 : s [7:0] $end
$var wire 1 ; pout $end
$var wire 2 < p [1:0] $end
$var wire 1 = gout $end
$var wire 2 > g [1:0] $end
$var wire 1 ? cout $end
$scope module c1 $end
$var wire 4 @ a [3:0] $end
$var wire 4 A b [3:0] $end
$var wire 1 $ cin $end
$var wire 4 B s [3:0] $end
$var wire 1 C pout $end
$var wire 2 D p [1:0] $end
$var wire 1 E gout $end
$var wire 2 F g [1:0] $end
$var wire 1 G cout $end
$scope module c1 $end
$var wire 2 H a [1:0] $end
$var wire 2 I b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 J s [1:0] $end
$var wire 1 K pout $end
$var wire 2 L p [1:0] $end
$var wire 1 M gout $end
$var wire 2 N g [1:0] $end
$var wire 1 O cout $end
$scope module a0 $end
$var wire 1 P a $end
$var wire 1 Q b $end
$var wire 1 $ c $end
$var wire 1 R g $end
$var wire 1 S p $end
$var wire 1 T s $end
$upscope $end
$scope module a1 $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 W g $end
$var wire 1 X p $end
$var wire 1 Y s $end
$var wire 1 O c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 O cout $end
$var wire 2 Z g [1:0] $end
$var wire 1 M gout $end
$var wire 2 [ p [1:0] $end
$var wire 1 K pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 2 \ a [1:0] $end
$var wire 2 ] b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 ^ s [1:0] $end
$var wire 1 _ pout $end
$var wire 2 ` p [1:0] $end
$var wire 1 a gout $end
$var wire 2 b g [1:0] $end
$var wire 1 c cout $end
$scope module a0 $end
$var wire 1 d a $end
$var wire 1 e b $end
$var wire 1 $ c $end
$var wire 1 f g $end
$var wire 1 g p $end
$var wire 1 h s $end
$upscope $end
$scope module a1 $end
$var wire 1 i a $end
$var wire 1 j b $end
$var wire 1 k g $end
$var wire 1 l p $end
$var wire 1 m s $end
$var wire 1 c c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 c cout $end
$var wire 2 n g [1:0] $end
$var wire 1 a gout $end
$var wire 2 o p [1:0] $end
$var wire 1 _ pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 G cout $end
$var wire 2 p g [1:0] $end
$var wire 1 E gout $end
$var wire 2 q p [1:0] $end
$var wire 1 C pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 4 r a [3:0] $end
$var wire 4 s b [3:0] $end
$var wire 1 $ cin $end
$var wire 4 t s [3:0] $end
$var wire 1 u pout $end
$var wire 2 v p [1:0] $end
$var wire 1 w gout $end
$var wire 2 x g [1:0] $end
$var wire 1 y cout $end
$scope module c1 $end
$var wire 2 z a [1:0] $end
$var wire 2 { b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 | s [1:0] $end
$var wire 1 } pout $end
$var wire 2 ~ p [1:0] $end
$var wire 1 !" gout $end
$var wire 2 "" g [1:0] $end
$var wire 1 #" cout $end
$scope module a0 $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 $ c $end
$var wire 1 &" g $end
$var wire 1 '" p $end
$var wire 1 (" s $end
$upscope $end
$scope module a1 $end
$var wire 1 )" a $end
$var wire 1 *" b $end
$var wire 1 +" g $end
$var wire 1 ," p $end
$var wire 1 -" s $end
$var wire 1 #" c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 #" cout $end
$var wire 2 ." g [1:0] $end
$var wire 1 !" gout $end
$var wire 2 /" p [1:0] $end
$var wire 1 } pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 2 0" a [1:0] $end
$var wire 2 1" b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 2" s [1:0] $end
$var wire 1 3" pout $end
$var wire 2 4" p [1:0] $end
$var wire 1 5" gout $end
$var wire 2 6" g [1:0] $end
$var wire 1 7" cout $end
$scope module a0 $end
$var wire 1 8" a $end
$var wire 1 9" b $end
$var wire 1 $ c $end
$var wire 1 :" g $end
$var wire 1 ;" p $end
$var wire 1 <" s $end
$upscope $end
$scope module a1 $end
$var wire 1 =" a $end
$var wire 1 >" b $end
$var wire 1 ?" g $end
$var wire 1 @" p $end
$var wire 1 A" s $end
$var wire 1 7" c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 7" cout $end
$var wire 2 B" g [1:0] $end
$var wire 1 5" gout $end
$var wire 2 C" p [1:0] $end
$var wire 1 3" pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 y cout $end
$var wire 2 D" g [1:0] $end
$var wire 1 w gout $end
$var wire 2 E" p [1:0] $end
$var wire 1 u pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 ? cout $end
$var wire 2 F" g [1:0] $end
$var wire 1 = gout $end
$var wire 2 G" p [1:0] $end
$var wire 1 ; pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 8 H" a [7:0] $end
$var wire 8 I" b [7:0] $end
$var wire 1 $ cin $end
$var wire 8 J" s [7:0] $end
$var wire 1 K" pout $end
$var wire 2 L" p [1:0] $end
$var wire 1 M" gout $end
$var wire 2 N" g [1:0] $end
$var wire 1 O" cout $end
$scope module c1 $end
$var wire 4 P" a [3:0] $end
$var wire 4 Q" b [3:0] $end
$var wire 1 $ cin $end
$var wire 4 R" s [3:0] $end
$var wire 1 S" pout $end
$var wire 2 T" p [1:0] $end
$var wire 1 U" gout $end
$var wire 2 V" g [1:0] $end
$var wire 1 W" cout $end
$scope module c1 $end
$var wire 2 X" a [1:0] $end
$var wire 2 Y" b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 Z" s [1:0] $end
$var wire 1 [" pout $end
$var wire 2 \" p [1:0] $end
$var wire 1 ]" gout $end
$var wire 2 ^" g [1:0] $end
$var wire 1 _" cout $end
$scope module a0 $end
$var wire 1 `" a $end
$var wire 1 a" b $end
$var wire 1 $ c $end
$var wire 1 b" g $end
$var wire 1 c" p $end
$var wire 1 d" s $end
$upscope $end
$scope module a1 $end
$var wire 1 e" a $end
$var wire 1 f" b $end
$var wire 1 g" g $end
$var wire 1 h" p $end
$var wire 1 i" s $end
$var wire 1 _" c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 _" cout $end
$var wire 2 j" g [1:0] $end
$var wire 1 ]" gout $end
$var wire 2 k" p [1:0] $end
$var wire 1 [" pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 2 l" a [1:0] $end
$var wire 2 m" b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 n" s [1:0] $end
$var wire 1 o" pout $end
$var wire 2 p" p [1:0] $end
$var wire 1 q" gout $end
$var wire 2 r" g [1:0] $end
$var wire 1 s" cout $end
$scope module a0 $end
$var wire 1 t" a $end
$var wire 1 u" b $end
$var wire 1 $ c $end
$var wire 1 v" g $end
$var wire 1 w" p $end
$var wire 1 x" s $end
$upscope $end
$scope module a1 $end
$var wire 1 y" a $end
$var wire 1 z" b $end
$var wire 1 {" g $end
$var wire 1 |" p $end
$var wire 1 }" s $end
$var wire 1 s" c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 s" cout $end
$var wire 2 ~" g [1:0] $end
$var wire 1 q" gout $end
$var wire 2 !# p [1:0] $end
$var wire 1 o" pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 W" cout $end
$var wire 2 "# g [1:0] $end
$var wire 1 U" gout $end
$var wire 2 ## p [1:0] $end
$var wire 1 S" pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 4 $# a [3:0] $end
$var wire 4 %# b [3:0] $end
$var wire 1 $ cin $end
$var wire 4 &# s [3:0] $end
$var wire 1 '# pout $end
$var wire 2 (# p [1:0] $end
$var wire 1 )# gout $end
$var wire 2 *# g [1:0] $end
$var wire 1 +# cout $end
$scope module c1 $end
$var wire 2 ,# a [1:0] $end
$var wire 2 -# b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 .# s [1:0] $end
$var wire 1 /# pout $end
$var wire 2 0# p [1:0] $end
$var wire 1 1# gout $end
$var wire 2 2# g [1:0] $end
$var wire 1 3# cout $end
$scope module a0 $end
$var wire 1 4# a $end
$var wire 1 5# b $end
$var wire 1 $ c $end
$var wire 1 6# g $end
$var wire 1 7# p $end
$var wire 1 8# s $end
$upscope $end
$scope module a1 $end
$var wire 1 9# a $end
$var wire 1 :# b $end
$var wire 1 ;# g $end
$var wire 1 <# p $end
$var wire 1 =# s $end
$var wire 1 3# c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 3# cout $end
$var wire 2 ># g [1:0] $end
$var wire 1 1# gout $end
$var wire 2 ?# p [1:0] $end
$var wire 1 /# pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 2 @# a [1:0] $end
$var wire 2 A# b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 B# s [1:0] $end
$var wire 1 C# pout $end
$var wire 2 D# p [1:0] $end
$var wire 1 E# gout $end
$var wire 2 F# g [1:0] $end
$var wire 1 G# cout $end
$scope module a0 $end
$var wire 1 H# a $end
$var wire 1 I# b $end
$var wire 1 $ c $end
$var wire 1 J# g $end
$var wire 1 K# p $end
$var wire 1 L# s $end
$upscope $end
$scope module a1 $end
$var wire 1 M# a $end
$var wire 1 N# b $end
$var wire 1 O# g $end
$var wire 1 P# p $end
$var wire 1 Q# s $end
$var wire 1 G# c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 G# cout $end
$var wire 2 R# g [1:0] $end
$var wire 1 E# gout $end
$var wire 2 S# p [1:0] $end
$var wire 1 C# pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 +# cout $end
$var wire 2 T# g [1:0] $end
$var wire 1 )# gout $end
$var wire 2 U# p [1:0] $end
$var wire 1 '# pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 O" cout $end
$var wire 2 V# g [1:0] $end
$var wire 1 M" gout $end
$var wire 2 W# p [1:0] $end
$var wire 1 K" pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 7 cout $end
$var wire 2 X# g [1:0] $end
$var wire 1 5 gout $end
$var wire 2 Y# p [1:0] $end
$var wire 1 3 pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 16 Z# a [15:0] $end
$var wire 16 [# b [15:0] $end
$var wire 1 $ cin $end
$var wire 16 \# s [15:0] $end
$var wire 1 ]# pout $end
$var wire 2 ^# p [1:0] $end
$var wire 1 _# gout $end
$var wire 2 `# g [1:0] $end
$var wire 1 a# cout $end
$scope module c1 $end
$var wire 8 b# a [7:0] $end
$var wire 8 c# b [7:0] $end
$var wire 1 $ cin $end
$var wire 8 d# s [7:0] $end
$var wire 1 e# pout $end
$var wire 2 f# p [1:0] $end
$var wire 1 g# gout $end
$var wire 2 h# g [1:0] $end
$var wire 1 i# cout $end
$scope module c1 $end
$var wire 4 j# a [3:0] $end
$var wire 4 k# b [3:0] $end
$var wire 1 $ cin $end
$var wire 4 l# s [3:0] $end
$var wire 1 m# pout $end
$var wire 2 n# p [1:0] $end
$var wire 1 o# gout $end
$var wire 2 p# g [1:0] $end
$var wire 1 q# cout $end
$scope module c1 $end
$var wire 2 r# a [1:0] $end
$var wire 2 s# b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 t# s [1:0] $end
$var wire 1 u# pout $end
$var wire 2 v# p [1:0] $end
$var wire 1 w# gout $end
$var wire 2 x# g [1:0] $end
$var wire 1 y# cout $end
$scope module a0 $end
$var wire 1 z# a $end
$var wire 1 {# b $end
$var wire 1 $ c $end
$var wire 1 |# g $end
$var wire 1 }# p $end
$var wire 1 ~# s $end
$upscope $end
$scope module a1 $end
$var wire 1 !$ a $end
$var wire 1 "$ b $end
$var wire 1 #$ g $end
$var wire 1 $$ p $end
$var wire 1 %$ s $end
$var wire 1 y# c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 y# cout $end
$var wire 2 &$ g [1:0] $end
$var wire 1 w# gout $end
$var wire 2 '$ p [1:0] $end
$var wire 1 u# pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 2 ($ a [1:0] $end
$var wire 2 )$ b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 *$ s [1:0] $end
$var wire 1 +$ pout $end
$var wire 2 ,$ p [1:0] $end
$var wire 1 -$ gout $end
$var wire 2 .$ g [1:0] $end
$var wire 1 /$ cout $end
$scope module a0 $end
$var wire 1 0$ a $end
$var wire 1 1$ b $end
$var wire 1 $ c $end
$var wire 1 2$ g $end
$var wire 1 3$ p $end
$var wire 1 4$ s $end
$upscope $end
$scope module a1 $end
$var wire 1 5$ a $end
$var wire 1 6$ b $end
$var wire 1 7$ g $end
$var wire 1 8$ p $end
$var wire 1 9$ s $end
$var wire 1 /$ c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 /$ cout $end
$var wire 2 :$ g [1:0] $end
$var wire 1 -$ gout $end
$var wire 2 ;$ p [1:0] $end
$var wire 1 +$ pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 q# cout $end
$var wire 2 <$ g [1:0] $end
$var wire 1 o# gout $end
$var wire 2 =$ p [1:0] $end
$var wire 1 m# pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 4 >$ a [3:0] $end
$var wire 4 ?$ b [3:0] $end
$var wire 1 $ cin $end
$var wire 4 @$ s [3:0] $end
$var wire 1 A$ pout $end
$var wire 2 B$ p [1:0] $end
$var wire 1 C$ gout $end
$var wire 2 D$ g [1:0] $end
$var wire 1 E$ cout $end
$scope module c1 $end
$var wire 2 F$ a [1:0] $end
$var wire 2 G$ b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 H$ s [1:0] $end
$var wire 1 I$ pout $end
$var wire 2 J$ p [1:0] $end
$var wire 1 K$ gout $end
$var wire 2 L$ g [1:0] $end
$var wire 1 M$ cout $end
$scope module a0 $end
$var wire 1 N$ a $end
$var wire 1 O$ b $end
$var wire 1 $ c $end
$var wire 1 P$ g $end
$var wire 1 Q$ p $end
$var wire 1 R$ s $end
$upscope $end
$scope module a1 $end
$var wire 1 S$ a $end
$var wire 1 T$ b $end
$var wire 1 U$ g $end
$var wire 1 V$ p $end
$var wire 1 W$ s $end
$var wire 1 M$ c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 M$ cout $end
$var wire 2 X$ g [1:0] $end
$var wire 1 K$ gout $end
$var wire 2 Y$ p [1:0] $end
$var wire 1 I$ pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 2 Z$ a [1:0] $end
$var wire 2 [$ b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 \$ s [1:0] $end
$var wire 1 ]$ pout $end
$var wire 2 ^$ p [1:0] $end
$var wire 1 _$ gout $end
$var wire 2 `$ g [1:0] $end
$var wire 1 a$ cout $end
$scope module a0 $end
$var wire 1 b$ a $end
$var wire 1 c$ b $end
$var wire 1 $ c $end
$var wire 1 d$ g $end
$var wire 1 e$ p $end
$var wire 1 f$ s $end
$upscope $end
$scope module a1 $end
$var wire 1 g$ a $end
$var wire 1 h$ b $end
$var wire 1 i$ g $end
$var wire 1 j$ p $end
$var wire 1 k$ s $end
$var wire 1 a$ c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 a$ cout $end
$var wire 2 l$ g [1:0] $end
$var wire 1 _$ gout $end
$var wire 2 m$ p [1:0] $end
$var wire 1 ]$ pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 E$ cout $end
$var wire 2 n$ g [1:0] $end
$var wire 1 C$ gout $end
$var wire 2 o$ p [1:0] $end
$var wire 1 A$ pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 i# cout $end
$var wire 2 p$ g [1:0] $end
$var wire 1 g# gout $end
$var wire 2 q$ p [1:0] $end
$var wire 1 e# pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 8 r$ a [7:0] $end
$var wire 8 s$ b [7:0] $end
$var wire 1 $ cin $end
$var wire 8 t$ s [7:0] $end
$var wire 1 u$ pout $end
$var wire 2 v$ p [1:0] $end
$var wire 1 w$ gout $end
$var wire 2 x$ g [1:0] $end
$var wire 1 y$ cout $end
$scope module c1 $end
$var wire 4 z$ a [3:0] $end
$var wire 4 {$ b [3:0] $end
$var wire 1 $ cin $end
$var wire 4 |$ s [3:0] $end
$var wire 1 }$ pout $end
$var wire 2 ~$ p [1:0] $end
$var wire 1 !% gout $end
$var wire 2 "% g [1:0] $end
$var wire 1 #% cout $end
$scope module c1 $end
$var wire 2 $% a [1:0] $end
$var wire 2 %% b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 &% s [1:0] $end
$var wire 1 '% pout $end
$var wire 2 (% p [1:0] $end
$var wire 1 )% gout $end
$var wire 2 *% g [1:0] $end
$var wire 1 +% cout $end
$scope module a0 $end
$var wire 1 ,% a $end
$var wire 1 -% b $end
$var wire 1 $ c $end
$var wire 1 .% g $end
$var wire 1 /% p $end
$var wire 1 0% s $end
$upscope $end
$scope module a1 $end
$var wire 1 1% a $end
$var wire 1 2% b $end
$var wire 1 3% g $end
$var wire 1 4% p $end
$var wire 1 5% s $end
$var wire 1 +% c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 +% cout $end
$var wire 2 6% g [1:0] $end
$var wire 1 )% gout $end
$var wire 2 7% p [1:0] $end
$var wire 1 '% pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 2 8% a [1:0] $end
$var wire 2 9% b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 :% s [1:0] $end
$var wire 1 ;% pout $end
$var wire 2 <% p [1:0] $end
$var wire 1 =% gout $end
$var wire 2 >% g [1:0] $end
$var wire 1 ?% cout $end
$scope module a0 $end
$var wire 1 @% a $end
$var wire 1 A% b $end
$var wire 1 $ c $end
$var wire 1 B% g $end
$var wire 1 C% p $end
$var wire 1 D% s $end
$upscope $end
$scope module a1 $end
$var wire 1 E% a $end
$var wire 1 F% b $end
$var wire 1 G% g $end
$var wire 1 H% p $end
$var wire 1 I% s $end
$var wire 1 ?% c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 ?% cout $end
$var wire 2 J% g [1:0] $end
$var wire 1 =% gout $end
$var wire 2 K% p [1:0] $end
$var wire 1 ;% pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 #% cout $end
$var wire 2 L% g [1:0] $end
$var wire 1 !% gout $end
$var wire 2 M% p [1:0] $end
$var wire 1 }$ pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 4 N% a [3:0] $end
$var wire 4 O% b [3:0] $end
$var wire 1 $ cin $end
$var wire 4 P% s [3:0] $end
$var wire 1 Q% pout $end
$var wire 2 R% p [1:0] $end
$var wire 1 S% gout $end
$var wire 2 T% g [1:0] $end
$var wire 1 U% cout $end
$scope module c1 $end
$var wire 2 V% a [1:0] $end
$var wire 2 W% b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 X% s [1:0] $end
$var wire 1 Y% pout $end
$var wire 2 Z% p [1:0] $end
$var wire 1 [% gout $end
$var wire 2 \% g [1:0] $end
$var wire 1 ]% cout $end
$scope module a0 $end
$var wire 1 ^% a $end
$var wire 1 _% b $end
$var wire 1 $ c $end
$var wire 1 `% g $end
$var wire 1 a% p $end
$var wire 1 b% s $end
$upscope $end
$scope module a1 $end
$var wire 1 c% a $end
$var wire 1 d% b $end
$var wire 1 e% g $end
$var wire 1 f% p $end
$var wire 1 g% s $end
$var wire 1 ]% c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 ]% cout $end
$var wire 2 h% g [1:0] $end
$var wire 1 [% gout $end
$var wire 2 i% p [1:0] $end
$var wire 1 Y% pout $end
$upscope $end
$upscope $end
$scope module c2 $end
$var wire 2 j% a [1:0] $end
$var wire 2 k% b [1:0] $end
$var wire 1 $ cin $end
$var wire 2 l% s [1:0] $end
$var wire 1 m% pout $end
$var wire 2 n% p [1:0] $end
$var wire 1 o% gout $end
$var wire 2 p% g [1:0] $end
$var wire 1 q% cout $end
$scope module a0 $end
$var wire 1 r% a $end
$var wire 1 s% b $end
$var wire 1 $ c $end
$var wire 1 t% g $end
$var wire 1 u% p $end
$var wire 1 v% s $end
$upscope $end
$scope module a1 $end
$var wire 1 w% a $end
$var wire 1 x% b $end
$var wire 1 y% g $end
$var wire 1 z% p $end
$var wire 1 {% s $end
$var wire 1 q% c $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 q% cout $end
$var wire 2 |% g [1:0] $end
$var wire 1 o% gout $end
$var wire 2 }% p [1:0] $end
$var wire 1 m% pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 U% cout $end
$var wire 2 ~% g [1:0] $end
$var wire 1 S% gout $end
$var wire 2 !& p [1:0] $end
$var wire 1 Q% pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 y$ cout $end
$var wire 2 "& g [1:0] $end
$var wire 1 w$ gout $end
$var wire 2 #& p [1:0] $end
$var wire 1 u$ pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 a# cout $end
$var wire 2 $& g [1:0] $end
$var wire 1 _# gout $end
$var wire 2 %& p [1:0] $end
$var wire 1 ]# pout $end
$upscope $end
$upscope $end
$scope module gp0 $end
$var wire 1 $ cin $end
$var wire 1 / cout $end
$var wire 2 && g [1:0] $end
$var wire 1 ) gout $end
$var wire 2 '& p [1:0] $end
$var wire 1 ( pout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 '&
b0 &&
b0 %&
b0 $&
b0 #&
b0 "&
b0 !&
b0 ~%
b0 }%
b0 |%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
b0 p%
0o%
b0 n%
0m%
b0 l%
b0 k%
b0 j%
b1 i%
b0 h%
0g%
0f%
0e%
0d%
0c%
1b%
1a%
0`%
0_%
1^%
0]%
b0 \%
0[%
b1 Z%
0Y%
b1 X%
b0 W%
b1 V%
0U%
b0 T%
0S%
b0 R%
0Q%
b1 P%
b0 O%
b1 N%
b0 M%
b0 L%
b0 K%
b0 J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
b0 >%
0=%
b0 <%
0;%
b0 :%
b0 9%
b0 8%
b10 7%
b0 6%
15%
14%
03%
02%
11%
00%
0/%
0.%
0-%
0,%
0+%
b0 *%
0)%
b10 (%
0'%
b10 &%
b0 %%
b10 $%
0#%
b0 "%
0!%
b0 ~$
0}$
b10 |$
b0 {$
b10 z$
0y$
b0 x$
0w$
b0 v$
0u$
b10010 t$
b0 s$
b10010 r$
b0 q$
b0 p$
b1 o$
b0 n$
b0 m$
b0 l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
b0 `$
0_$
b0 ^$
0]$
b0 \$
b0 [$
b0 Z$
b11 Y$
b0 X$
1W$
1V$
0U$
0T$
1S$
1R$
1Q$
0P$
0O$
1N$
0M$
b0 L$
0K$
b11 J$
1I$
b11 H$
b0 G$
b11 F$
0E$
b0 D$
0C$
b1 B$
0A$
b11 @$
b0 ?$
b11 >$
b0 =$
b0 <$
b1 ;$
b0 :$
09$
08$
07$
06$
05$
14$
13$
02$
01$
10$
0/$
b0 .$
0-$
b1 ,$
0+$
b1 *$
b0 )$
b1 ($
b0 '$
b0 &$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
b0 x#
0w#
b0 v#
0u#
b0 t#
b0 s#
b0 r#
0q#
b0 p#
0o#
b0 n#
0m#
b100 l#
b0 k#
b100 j#
0i#
b0 h#
0g#
b0 f#
0e#
b110100 d#
b0 c#
b110100 b#
0a#
b0 `#
0_#
b0 ^#
0]#
b1001000110100 \#
b0 [#
b1001000110100 Z#
b0 Y#
b0 X#
b0 W#
b0 V#
b0 U#
b0 T#
b1 S#
b0 R#
0Q#
0P#
0O#
0N#
0M#
1L#
1K#
0J#
0I#
1H#
0G#
b0 F#
0E#
b1 D#
0C#
b1 B#
b0 A#
b1 @#
b1 ?#
b0 >#
0=#
0<#
0;#
0:#
09#
18#
17#
06#
05#
14#
03#
b0 2#
01#
b1 0#
0/#
b1 .#
b0 -#
b1 ,#
0+#
b0 *#
0)#
b0 (#
0'#
b101 &#
b0 %#
b101 $#
b0 ##
b0 "#
b1 !#
b0 ~"
0}"
0|"
0{"
0z"
0y"
1x"
1w"
0v"
0u"
1t"
0s"
b0 r"
0q"
b1 p"
0o"
b1 n"
b0 m"
b1 l"
b10 k"
b0 j"
1i"
1h"
0g"
0f"
1e"
0d"
0c"
0b"
0a"
0`"
0_"
b0 ^"
0]"
b10 \"
0["
b10 Z"
b0 Y"
b10 X"
0W"
b0 V"
0U"
b0 T"
0S"
b110 R"
b0 Q"
b110 P"
0O"
b0 N"
0M"
b0 L"
0K"
b1010110 J"
b0 I"
b1010110 H"
b0 G"
b0 F"
b1 E"
b0 D"
b1 C"
b0 B"
0A"
0@"
0?"
0>"
0="
1<"
1;"
0:"
09"
18"
07"
b0 6"
05"
b1 4"
03"
b1 2"
b0 1"
b1 0"
b11 /"
b0 ."
1-"
1,"
0+"
0*"
1)"
1("
1'"
0&"
0%"
1$"
0#"
b0 ""
0!"
b11 ~
1}
b11 |
b0 {
b11 z
0y
b0 x
0w
b1 v
0u
b111 t
b0 s
b111 r
b0 q
b0 p
b10 o
b0 n
1m
1l
0k
0j
1i
0h
0g
0f
0e
0d
0c
b0 b
0a
b10 `
0_
b10 ^
b0 ]
b10 \
b1 [
b0 Z
0Y
0X
0W
0V
0U
1T
1S
0R
1Q
0P
0O
b0 N
0M
b1 L
0K
b1 J
b1 I
b0 H
0G
b0 F
0E
b0 D
0C
b1001 B
b1 A
b1000 @
0?
b0 >
0=
b0 <
0;
b1111001 :
b1 9
b1111000 8
07
b0 6
05
b0 4
03
b101011001111001 2
b1 1
b101011001111000 0
0/
b0 .
b0 -
b10010001101000101011001111001 ,
b1 +
b10010001101000101011001111000 *
0)
0(
b10010001101000101011001111001 '
b1 &
b10010001101000101011001111000 %
0$
b1 #
b10010001101000101011001111000 "
b10010001101000101011001111001 !
$end
#5
