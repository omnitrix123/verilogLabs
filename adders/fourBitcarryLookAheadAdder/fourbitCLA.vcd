$date
	Tue Dec 14 22:24:39 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module FA $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( c1 $end
$var wire 1 ) c2 $end
$var wire 1 * c3 $end
$var wire 1 % cin $end
$var wire 1 " cout $end
$var wire 1 + g0 $end
$var wire 1 , g1 $end
$var wire 1 - g2 $end
$var wire 1 . g3 $end
$var wire 1 / p0 $end
$var wire 1 0 p1 $end
$var wire 1 1 p2 $end
$var wire 1 2 p3 $end
$var wire 4 3 sum [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#5
0)
0*
1"
0(
0/
00
01
02
0+
0,
0-
1.
0%
b1000 $
b1000 '
b1000 #
b1000 &
#10
1/
10
11
b1111 $
b1111 '
#15
0"
0/
01
12
0.
b1000 $
b1000 '
b10 #
b10 &
#20
