$date
	Thu Sep 23 19:30:28 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! Result $end
$var reg 16 " A [15:0] $end
$var reg 4 # S [3:0] $end
$scope module S1 $end
$var wire 16 $ A [15:0] $end
$var wire 4 % S [3:0] $end
$var wire 1 ! Out $end
$var wire 4 & O [3:0] $end
$scope module F1 $end
$var wire 4 ' a [3:0] $end
$var wire 2 ( select [1:0] $end
$var wire 1 ) out $end
$upscope $end
$scope module F2 $end
$var wire 4 * a [3:0] $end
$var wire 2 + select [1:0] $end
$var wire 1 , out $end
$upscope $end
$scope module F3 $end
$var wire 4 - a [3:0] $end
$var wire 2 . select [1:0] $end
$var wire 1 / out $end
$upscope $end
$scope module F4 $end
$var wire 4 0 a [3:0] $end
$var wire 2 1 select [1:0] $end
$var wire 1 2 out $end
$upscope $end
$scope module F5 $end
$var wire 4 3 a [3:0] $end
$var wire 2 4 select [1:0] $end
$var wire 1 ! out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
bx 3
x2
bx 1
bx 0
x/
bx .
bx -
x,
bx +
bx *
x)
bx (
bx '
bx &
bx %
bx $
bx #
bx "
x!
$end
#5
1!
1)
b0 (
0,
b0 +
0/
b0 .
b1 &
b1 3
02
b0 1
b0 4
b111 '
b110 *
b0 -
b1010 0
b0 #
b0 %
b1010000001100111 "
b1010000001100111 $
#10
b1 (
1,
b1 +
b1 .
b1011 &
b1011 3
12
b1 1
b1 #
b1 %
#15
b10 (
b10 +
b10 .
b11 &
b11 3
02
b10 1
b10 #
b10 %
#20
0!
0)
b11 (
0,
b11 +
b11 .
b1000 &
b1000 3
12
b11 1
b11 #
b11 %
#25
1)
b0 (
b0 +
b0 .
b1 &
b1 3
02
b0 1
b1 4
b100 #
b100 %
#30
b1 (
1!
1,
b1 +
b1 .
b1011 &
b1011 3
12
b1 1
b101 #
b101 %
#35
b10 (
b10 +
b10 .
b11 &
b11 3
02
b10 1
b110 #
b110 %
#40
