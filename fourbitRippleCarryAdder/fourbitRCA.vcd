$date
	Sat Dec 11 23:39:21 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 4 ! sumout [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module FA $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sumout [3:0] $end
$var wire 1 " cout $end
$var wire 3 ) cimm [2:0] $end
$scope module B40 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % cin $end
$var wire 1 , sumout $end
$var wire 1 - cout $end
$scope module C1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % cin $end
$var wire 1 - cout $end
$var wire 1 . t1 $end
$var wire 1 / t2 $end
$var wire 1 0 t3 $end
$upscope $end
$scope module S1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % cin $end
$var wire 1 , sumout $end
$var wire 1 1 t1 $end
$upscope $end
$upscope $end
$scope module B41 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 cin $end
$var wire 1 5 sumout $end
$var wire 1 6 cout $end
$scope module C1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 cin $end
$var wire 1 6 cout $end
$var wire 1 7 t1 $end
$var wire 1 8 t2 $end
$var wire 1 9 t3 $end
$upscope $end
$scope module S1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 cin $end
$var wire 1 5 sumout $end
$var wire 1 : t1 $end
$upscope $end
$upscope $end
$scope module B42 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 > sumout $end
$var wire 1 ? cout $end
$scope module C1 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 ? cout $end
$var wire 1 @ t1 $end
$var wire 1 A t2 $end
$var wire 1 B t3 $end
$upscope $end
$scope module S1 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 > sumout $end
$var wire 1 C t1 $end
$upscope $end
$upscope $end
$scope module B43 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F cin $end
$var wire 1 G sumout $end
$var wire 1 " cout $end
$scope module C1 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F cin $end
$var wire 1 " cout $end
$var wire 1 H t1 $end
$var wire 1 I t2 $end
$var wire 1 J t3 $end
$upscope $end
$scope module S1 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F cin $end
$var wire 1 G sumout $end
$var wire 1 K t1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
bx )
bx (
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#5
0>
0I
0J
0G
05
0=
0F
04
b0 !
b0 (
0,
06
0?
1"
b0 )
0-
08
0A
0.
01
07
09
0:
0@
0B
0C
1H
0K
0/
00
0+
03
0<
1E
0*
02
0;
1D
0%
b1000 $
b1000 '
b1000 #
b1000 &
#10
1,
15
b111 !
b111 (
1>
11
1:
1C
1+
13
1<
b1111 $
b1111 '
#15
0,
0>
0"
b1010 !
b1010 (
1G
01
0C
0H
1K
0+
03
0<
12
0D
b1000 $
b1000 '
b10 #
b10 &
#20
